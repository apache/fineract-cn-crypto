/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath ("io.spring.gradle:dependency-management-plugin:1.0.10.RELEASE")
    }
}

plugins {
    id 'com.github.hierynomus.license' version '0.15.0'
    id 'org.nosphere.apache.rat' version '0.6.0'
    id 'com.jfrog.artifactory' version '4.18.2'
    id 'maven-publish'
    id 'idea'
    id 'java'
}

group 'org.apache.fineract.cn'
version 'spring_boot_2-SNAPSHOT'

tasks.withType(JavaCompile) {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    jcenter()
}

ext.versions = [
        spring        : '5.3.3',
        springsecurity: '5.4.2',
        logback       : '1.2.3',
        slf4j         : '1.7.30',
        spotbugs      : '4.2.0',
        junit         : '5.7.0',
        springtest    : '5.3.3'
]

configurations {
    compile.exclude group: 'commons-logging', module: 'commons-logging'
}

dependencies {
    implementation(
            [group: 'org.springframework', name: 'spring-context', version: versions.spring],
            [group: 'org.springframework.security', name: 'spring-security-core', version: versions.springsecurity],
            [group: 'ch.qos.logback', name: 'logback-classic', version: versions.logback],
            [group: 'org.slf4j', name: 'jcl-over-slf4j', version: versions.slf4j],
            [group: 'com.github.spotbugs', name: 'spotbugs', version: versions.spotbugs]
    )
    testImplementation(
            [group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit],
            [group: 'org.springframework', name: 'spring-test', version: versions.springtest]
    )
}

license {
    header rootProject.file('HEADER')
    strictCheck true
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

publishing {
    publications {
        babel(MavenPublication) {
            from components.java
            groupId project.group
            artifactId project.name
            version project.findProperty('externalVersion') ?: project.version
        }
    }
}

artifactory {
    contextUrl = System.getenv("ARTIFACTORY_URL")
    publish {
        repository {
            repoKey = project.findProperty('artifactoryRepoKey')
            username = System.getenv("ARTIFACTORY_USER")
            password = System.getenv("ARTIFACTORY_PASSWORD")
        }

        defaults {
            publications ('babel')
    }
}
}
artifactoryPublish.dependsOn('clean','publishToMavenLocal')

rat {
    // List of exclude directives, defaults to ['**/.gradle/**']
    excludes = [
            ".project",
            ".settings/**",
            ".idea/**",
            ".gradle/**",
            "gradle/**",
            "build/**",
            "gradlew",
            "gradlew.bat",
            "README.md",
            "src/test/resources/.salt",
            "src/test/resources/.secret"
    ]
}
